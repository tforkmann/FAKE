<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <PackAsTool>true</PackAsTool>
        <OutputType>Exe</OutputType>
        <ToolCommandName>fake</ToolCommandName>
        <TargetFramework>netcoreapp2.1</TargetFramework>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <DefineConstants>$(DefineConstants);RELEASE</DefineConstants>
    </PropertyGroup>

    <!-- Debian packaging -->
    <PropertyGroup Condition=" '$(CustomTarget)' == 'CreateDeb' ">
        <RuntimeIdentifiers>linux-x64</RuntimeIdentifiers>
        <PackAsTool></PackAsTool>
        <ToolCommandName></ToolCommandName>
        <Prefix>/opt/fake</Prefix>
        <PreInstallScript>$([System.IO.File]::ReadAllText('$(MSBuildProjectDirectory)/../../../packaging/debian/preinst'))</PreInstallScript>
        <PostInstallScript>$([System.IO.File]::ReadAllText('$(MSBuildProjectDirectory)/../../../packaging/debian/postinst'))</PostInstallScript>
        <PreRemoveScript>$([System.IO.File]::ReadAllText('$(MSBuildProjectDirectory)/../../../packaging/debian/prerm'))</PreRemoveScript>
        <PostRemoveScript>$([System.IO.File]::ReadAllText('$(MSBuildProjectDirectory)/../../../packaging/debian/postrm'))</PostRemoveScript>
    </PropertyGroup>
    
    <ItemGroup>
        <Compile Include="AssemblyInfo.fs" />
        <Compile Include="..\Fake.netcore\Cli.fs" />
        <Compile Include="..\Fake.netcore\Program.fs" />
        <!-- Note: This resource should be moved to Paket.Core... -->
        <EmbeddedResource Include="..\..\..\.paket\Paket.Restore.targets" />
    </ItemGroup>
    <ItemGroup>
        <ProjectReference Include="..\Fake.Core.CommandLineParsing\Fake.Core.CommandLineParsing.fsproj" />
        <ProjectReference Include="..\Fake.Runtime\Fake.Runtime.fsproj" />
    </ItemGroup>
    <Import Project="..\..\..\.paket\Paket.Restore.targets" />
</Project>
